{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"autoencoder.ipynb","version":"0.3.2","views":{},"default_view":{},"provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"metadata":{"id":"BnmksSKy__P5","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":51},"outputId":"7bd8d74d-2710-4fd0-9287-f8d6d88bfdb7","executionInfo":{"status":"ok","timestamp":1521345448309,"user_tz":360,"elapsed":913,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["import tensorflow as tf\n","import pandas as pd\n","import numpy as np\n","from sklearn.neural_network import BernoulliRBM\n","from google.colab import files\n","\n","__author__ = \"Olivares Castillo José Luis\"\n","\n","print(\"TensorFlow\",tf.__version__)\n","if tf.test.gpu_device_name():\n","  print(\"GPU disponible\")"],"execution_count":2,"outputs":[{"output_type":"stream","text":["TensorFlow 1.6.0\n","GPU disponible\n"],"name":"stdout"}]},{"metadata":{"id":"MhCna3n13wzu","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["LOG_DIR = '/tmp/model1'\n","get_ipython().system_raw(\n","    'tensorboard --logdir {} --host 0.0.0.0 --port 6006 &'\n","    .format(LOG_DIR)\n",")"],"execution_count":0,"outputs":[]},{"metadata":{"id":"gieVFrDa3w9X","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["! curl http://localhost:6006"],"execution_count":0,"outputs":[]},{"metadata":{"id":"O5SHqbVS3w7X","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["! wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip > /dev/null 2>&1\n","! unzip ngrok-stable-linux-amd64.zip > /dev/null 2>&1"],"execution_count":0,"outputs":[]},{"metadata":{"id":"kpq8X3zU3w4A","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["get_ipython().system_raw('./ngrok http 6006 &')"],"execution_count":0,"outputs":[]},{"metadata":{"id":"vnOPRN4O36D0","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["! curl -s http://localhost:4040/api/tunnels | python3 -c \\\n","    \"import sys, json; print(json.load(sys.stdin)['tunnels'][0]['public_url'])\""],"execution_count":0,"outputs":[]},{"metadata":{"id":"-bpJVCtw36PL","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["# Install\n","! npm install -g localtunnel"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Lovobgrr36Vz","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["# Tunnel port 6006 (TensorBoard assumed running)\n","get_ipython().system_raw('lt --port 6006 >> url.txt 2>&1 &')"],"execution_count":0,"outputs":[]},{"metadata":{"id":"D4KRgZAy36aX","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["# Get url\n","! cat url.txt"],"execution_count":0,"outputs":[]},{"metadata":{"id":"wWQMkstGiWMb","colab_type":"text"},"cell_type":"markdown","source":["# Cargar archivos necesarios\n","## Lexicon de entrenamiento"]},{"metadata":{"id":"GlBaLXf5FiZT","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["##############################\n","# Cargar archivos necesarios #\n","##############################\n","# Cargar lexicon semilla de entrenamiento\n","# `lexiconfile` es de type dict.\n","train_set = files.upload()\n","\n","# Se convierte el archivo a una lista\n","train_set = train_set['OPUS_en_it_europarl_train_5K.txt'].decode(\"utf-8\").split(\"\\n\")\n","\n","#tuple(lexicon[0].split())"],"execution_count":0,"outputs":[]},{"metadata":{"id":"t0X7qGfmdpCg","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":34},"outputId":"3e0adb04-3697-4fdd-dd91-88978f32d928","executionInfo":{"status":"ok","timestamp":1519933451648,"user_tz":360,"elapsed":473,"user":{"displayName":"José Castillo","photoUrl":"//lh6.googleusercontent.com/-Rz3R3wYNNQs/AAAAAAAAAAI/AAAAAAAAjjM/p1QOaiSP3Nc/s50-c-k-no/photo.jpg","userId":"105435570147088816949"}}},"cell_type":"code","source":["train_set.__len__()"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5000"]},"metadata":{"tags":[]},"execution_count":3}]},{"metadata":{"id":"Htz3gxQuIcHf","colab_type":"text"},"cell_type":"markdown","source":["## Lexicon de evaluación"]},{"metadata":{"id":"__q4aRt0Esl2","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["'''test_set = files.upload()\n","test_set = test_set['evaluationset'].decode(\"utf-8\").split(\"\\n\")'''"],"execution_count":0,"outputs":[]},{"metadata":{"id":"gm0yX036IqAb","colab_type":"text"},"cell_type":"markdown","source":["## Función para crear dataframes de lexicones"]},{"metadata":{"id":"OgttH9LNR7N3","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["def create_lexicon_dataframe(lexicon):\n","  # Separar cada elemento de lista en una tupla\n","  lexicon_ = list()\n","  for i in lexicon:\n","    lexicon_.append(tuple(i.split()))\n","\n","  # Crear dataframe con los pares traducción\n","  lexicon_df = pd.DataFrame.from_records(lexicon_, columns=[\"esp\", \"nah\"])\n","  del lexicon_\n","  return lexicon_df\n","  "],"execution_count":0,"outputs":[]},{"metadata":{"id":"sjmurOl-JDi8","colab_type":"text"},"cell_type":"markdown","source":["### Crear dataframes de lexicones"]},{"metadata":{"id":"SvBAnM6WFQqk","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":34},"outputId":"db44b672-dac5-4da8-c674-cbd7ba4d4621","executionInfo":{"status":"ok","timestamp":1519933456484,"user_tz":360,"elapsed":388,"user":{"displayName":"José Castillo","photoUrl":"//lh6.googleusercontent.com/-Rz3R3wYNNQs/AAAAAAAAAAI/AAAAAAAAjjM/p1QOaiSP3Nc/s50-c-k-no/photo.jpg","userId":"105435570147088816949"}}},"cell_type":"code","source":["train_set = create_lexicon_dataframe(train_set)\n","#test_set = create_lexicon_dataframe(test_set)\n","train_set.shape#,test_set.shape"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5000, 2)"]},"metadata":{"tags":[]},"execution_count":5}]},{"metadata":{"id":"ib6dzPBYQaXv","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["pares_eval = list(zip(e, n))"],"execution_count":0,"outputs":[]},{"metadata":{"id":"JtpzbMMkQp9j","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["train_set = pd.DataFrame.from_records(pares_eval, columns=[\"esp\", \"nah\"])"],"execution_count":0,"outputs":[]},{"metadata":{"id":"WrHmIkRI2avN","colab_type":"text"},"cell_type":"markdown","source":["# Vectores N2V/W2V"]},{"metadata":{"id":"qsv0QYx4TDnW","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1},{"item_id":2}],"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":72},"outputId":"beeaca0a-3c64-4661-c009-6bab258a3693","executionInfo":{"status":"ok","timestamp":1521345918145,"user_tz":360,"elapsed":316003,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["# Cargar vectores objetivo\n","target_embeddings = files.upload()"],"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-122755d6-9fbd-4ab6-bca1-1b86d95a50bf\" name=\"files[]\" multiple disabled />\n","     <output id=\"result-122755d6-9fbd-4ab6-bca1-1b86d95a50bf\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving es-train.5k.300d.embeddings to es-train.5k.300d.embeddings\n"],"name":"stdout"}]},{"metadata":{"id":"vIgkIDtSxzdg","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1},{"item_id":2}],"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":72},"outputId":"2d9a2fe8-df68-401b-939f-a5fc65afeec2","executionInfo":{"status":"ok","timestamp":1521346285304,"user_tz":360,"elapsed":363715,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["# Cargar vectores fuente\n","source_embeddings = files.upload()"],"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-ab044522-678b-4bc2-8b13-5ec0dcf68746\" name=\"files[]\" multiple disabled />\n","     <output id=\"result-ab044522-678b-4bc2-8b13-5ec0dcf68746\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving en-train.5k.300d.embeddings to en-train.5k.300d (2).embeddings\n"],"name":"stdout"}]},{"metadata":{"id":"HfUQhJ18obrW","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1},{"item_id":2}],"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":72},"outputId":"ce187417-8890-41a9-b3dc-851e7856320f","executionInfo":{"status":"ok","timestamp":1521342524865,"user_tz":360,"elapsed":111494,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["tsource_embeddings = files.upload()"],"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-5f277e29-a9df-4692-ae14-5fd267d639b4\" name=\"files[]\" multiple disabled />\n","     <output id=\"result-5f277e29-a9df-4692-ae14-5fd267d639b4\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving en-test.300d.embeddings to en-test.300d.embeddings\n"],"name":"stdout"}]},{"metadata":{"id":"gzm1qW1GpQ2m","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":38},"cellView":"code","outputId":"07c20860-4597-4d89-a8ce-9ef86db2b8ad"},"cell_type":"code","source":["ttarget_embeddings = files.upload()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-281ffe39-30fb-4f76-8f8f-b7e8b916db7c\" name=\"files[]\" multiple disabled />\n","     <output id=\"result-281ffe39-30fb-4f76-8f8f-b7e8b916db7c\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"sF_hXH99xJZf","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["# Convertir archivos de prueba a una lista\n","tsource_embeddings = tsource_embeddings['en-test.300d.embeddings'].decode(\"utf-8\").split(\"\\n\")\n","ttarget_embeddings = ttarget_embeddings['es-test.300d.embeddings'].decode(\"utf-8\").split(\"\\n\")"],"execution_count":0,"outputs":[]},{"metadata":{"id":"XrMz4hvQSD1Z","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["# Convertir archivos de entrenamiento a una lista\n","source_embeddings = source_embeddings['en-train.5k.300d.embeddings'].decode(\"utf-8\").split(\"\\n\")\n","target_embeddings = target_embeddings['es-train.5k.300d.embeddings'].decode(\"utf-8\").split(\"\\n\")"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Q304g_QPmjX8","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["def create_vectors_dataframe(df):\n","  # Separar cada elemento de la lista en una tupla\n","  df_tmp = list()\n","  for i in df:\n","      if i == 0:\n","          pass\n","      else:\n","          df_tmp.append(tuple(i.split()))\n","\n","  # Eliminar el primer elemento, no se utiliza\n","  #df_tmp.pop(0)\n","  return pd.DataFrame.from_records(df_tmp)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"_9TelsIJSMBX","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["# Crear dataframes con los vectores train\n","source_df = create_vectors_dataframe(source_embeddings)\n","target_df = create_vectors_dataframe(target_embeddings)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"S9_2UON1xaQk","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["# Crear dataframes con los vectores test\n","tsource_df = create_vectors_dataframe(tsource_embeddings)\n","ttarget_df = create_vectors_dataframe(ttarget_embeddings)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"fG9iWa4FSOYI","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":253},"outputId":"05bc6295-b23f-4774-e579-5fa21313fbca","executionInfo":{"status":"ok","timestamp":1521346321828,"user_tz":360,"elapsed":662,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["source_df.head()"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>291</th>\n","      <th>292</th>\n","      <th>293</th>\n","      <th>294</th>\n","      <th>295</th>\n","      <th>296</th>\n","      <th>297</th>\n","      <th>298</th>\n","      <th>299</th>\n","      <th>300</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>arts</td>\n","      <td>0.001877</td>\n","      <td>0.243686</td>\n","      <td>-0.105252</td>\n","      <td>-0.176049</td>\n","      <td>0.234578</td>\n","      <td>-0.033653</td>\n","      <td>0.0345</td>\n","      <td>-0.069254</td>\n","      <td>-0.276423</td>\n","      <td>...</td>\n","      <td>0.312019</td>\n","      <td>0.310507</td>\n","      <td>0.052941</td>\n","      <td>0.0821</td>\n","      <td>-0.15205</td>\n","      <td>0.244574</td>\n","      <td>0.161786</td>\n","      <td>0.098718</td>\n","      <td>-0.326005</td>\n","      <td>-0.099956</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>cup</td>\n","      <td>-0.085565</td>\n","      <td>-0.241376</td>\n","      <td>-0.053201</td>\n","      <td>0.087245</td>\n","      <td>-0.026103</td>\n","      <td>0.035632</td>\n","      <td>-0.257982</td>\n","      <td>0.054935</td>\n","      <td>0.366347</td>\n","      <td>...</td>\n","      <td>-0.165468</td>\n","      <td>-0.178355</td>\n","      <td>0.142706</td>\n","      <td>0.003027</td>\n","      <td>0.045938</td>\n","      <td>0.363771</td>\n","      <td>-0.083733</td>\n","      <td>-0.383062</td>\n","      <td>-0.047439</td>\n","      <td>0.179232</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>dead</td>\n","      <td>0.192205</td>\n","      <td>-0.033136</td>\n","      <td>0.066933</td>\n","      <td>0.055478</td>\n","      <td>0.065532</td>\n","      <td>0.342986</td>\n","      <td>0.043959</td>\n","      <td>-0.013671</td>\n","      <td>-0.013507</td>\n","      <td>...</td>\n","      <td>-0.071285</td>\n","      <td>-0.061429</td>\n","      <td>0.206473</td>\n","      <td>0.190807</td>\n","      <td>0.004307</td>\n","      <td>-0.02973</td>\n","      <td>-0.056785</td>\n","      <td>0.117162</td>\n","      <td>-0.124951</td>\n","      <td>0.192607</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>needed</td>\n","      <td>-0.001267</td>\n","      <td>0.010535</td>\n","      <td>0.143041</td>\n","      <td>-0.098728</td>\n","      <td>-0.195207</td>\n","      <td>-0.006796</td>\n","      <td>-0.069437</td>\n","      <td>-0.275309</td>\n","      <td>0.200975</td>\n","      <td>...</td>\n","      <td>0.301203</td>\n","      <td>-0.0878</td>\n","      <td>0.03705</td>\n","      <td>0.032088</td>\n","      <td>0.039889</td>\n","      <td>0.012407</td>\n","      <td>0.093349</td>\n","      <td>0.046537</td>\n","      <td>-0.112925</td>\n","      <td>0.177376</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>wild</td>\n","      <td>-0.184342</td>\n","      <td>0.181135</td>\n","      <td>-0.211144</td>\n","      <td>-0.004717</td>\n","      <td>-0.386541</td>\n","      <td>-0.208588</td>\n","      <td>0.102581</td>\n","      <td>0.26453</td>\n","      <td>-0.038963</td>\n","      <td>...</td>\n","      <td>0.263819</td>\n","      <td>-0.032016</td>\n","      <td>-0.179921</td>\n","      <td>0.084885</td>\n","      <td>-0.016319</td>\n","      <td>0.063094</td>\n","      <td>-0.004894</td>\n","      <td>-0.21006</td>\n","      <td>-0.093967</td>\n","      <td>0.324365</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 301 columns</p>\n","</div>"],"text/plain":["      0          1          2          3          4          5          6    \\\n","0    arts   0.001877   0.243686  -0.105252  -0.176049   0.234578  -0.033653   \n","1     cup  -0.085565  -0.241376  -0.053201   0.087245  -0.026103   0.035632   \n","2    dead   0.192205  -0.033136   0.066933   0.055478   0.065532   0.342986   \n","3  needed  -0.001267   0.010535   0.143041  -0.098728  -0.195207  -0.006796   \n","4    wild  -0.184342   0.181135  -0.211144  -0.004717  -0.386541  -0.208588   \n","\n","         7          8          9      ...            291        292  \\\n","0     0.0345  -0.069254  -0.276423    ...       0.312019   0.310507   \n","1  -0.257982   0.054935   0.366347    ...      -0.165468  -0.178355   \n","2   0.043959  -0.013671  -0.013507    ...      -0.071285  -0.061429   \n","3  -0.069437  -0.275309   0.200975    ...       0.301203    -0.0878   \n","4   0.102581    0.26453  -0.038963    ...       0.263819  -0.032016   \n","\n","         293       294        295       296        297        298        299  \\\n","0   0.052941    0.0821   -0.15205  0.244574   0.161786   0.098718  -0.326005   \n","1   0.142706  0.003027   0.045938  0.363771  -0.083733  -0.383062  -0.047439   \n","2   0.206473  0.190807   0.004307  -0.02973  -0.056785   0.117162  -0.124951   \n","3    0.03705  0.032088   0.039889  0.012407   0.093349   0.046537  -0.112925   \n","4  -0.179921  0.084885  -0.016319  0.063094  -0.004894   -0.21006  -0.093967   \n","\n","         300  \n","0  -0.099956  \n","1   0.179232  \n","2   0.192607  \n","3   0.177376  \n","4   0.324365  \n","\n","[5 rows x 301 columns]"]},"metadata":{"tags":[]},"execution_count":11}]},{"metadata":{"id":"8MT69USPSQDr","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":253},"outputId":"c4e7066d-6111-49cd-8e3f-07471ffc68e1","executionInfo":{"status":"ok","timestamp":1521346324536,"user_tz":360,"elapsed":497,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["target_df.head()"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>291</th>\n","      <th>292</th>\n","      <th>293</th>\n","      <th>294</th>\n","      <th>295</th>\n","      <th>296</th>\n","      <th>297</th>\n","      <th>298</th>\n","      <th>299</th>\n","      <th>300</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>espectáculo</td>\n","      <td>-0.018124</td>\n","      <td>0.662344</td>\n","      <td>-0.496641</td>\n","      <td>1.093626</td>\n","      <td>1.203544</td>\n","      <td>0.579767</td>\n","      <td>-0.709709</td>\n","      <td>-1.673271</td>\n","      <td>-0.357038</td>\n","      <td>...</td>\n","      <td>0.987171</td>\n","      <td>-0.519311</td>\n","      <td>-0.455485</td>\n","      <td>-3.071517</td>\n","      <td>0.301956</td>\n","      <td>-0.284423</td>\n","      <td>-0.421788</td>\n","      <td>-0.582947</td>\n","      <td>-0.232837</td>\n","      <td>-0.242942</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>copa</td>\n","      <td>0.76913</td>\n","      <td>-0.136863</td>\n","      <td>0.574292</td>\n","      <td>0.914988</td>\n","      <td>-0.424388</td>\n","      <td>1.480464</td>\n","      <td>0.584982</td>\n","      <td>-1.155805</td>\n","      <td>-0.232642</td>\n","      <td>...</td>\n","      <td>-1.56464</td>\n","      <td>0.147232</td>\n","      <td>0.494064</td>\n","      <td>-0.050192</td>\n","      <td>1.089621</td>\n","      <td>0.132484</td>\n","      <td>0.425075</td>\n","      <td>-0.163198</td>\n","      <td>-1.102661</td>\n","      <td>0.108071</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>muertos</td>\n","      <td>0.007998</td>\n","      <td>-1.505609</td>\n","      <td>-0.040155</td>\n","      <td>-2.287344</td>\n","      <td>-0.745638</td>\n","      <td>-2.518183</td>\n","      <td>-0.216369</td>\n","      <td>-0.069186</td>\n","      <td>0.810915</td>\n","      <td>...</td>\n","      <td>1.60178</td>\n","      <td>1.236585</td>\n","      <td>-1.610454</td>\n","      <td>0.449868</td>\n","      <td>1.119087</td>\n","      <td>-0.058529</td>\n","      <td>1.179235</td>\n","      <td>2.780768</td>\n","      <td>0.045362</td>\n","      <td>-0.476397</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>necesaria</td>\n","      <td>0.445097</td>\n","      <td>-0.354437</td>\n","      <td>0.687452</td>\n","      <td>-0.504538</td>\n","      <td>-1.704996</td>\n","      <td>-1.646449</td>\n","      <td>-0.051403</td>\n","      <td>-0.365338</td>\n","      <td>-0.043992</td>\n","      <td>...</td>\n","      <td>-0.264119</td>\n","      <td>0.309252</td>\n","      <td>0.850894</td>\n","      <td>-0.203283</td>\n","      <td>-0.503264</td>\n","      <td>-0.480426</td>\n","      <td>-1.598555</td>\n","      <td>0.835111</td>\n","      <td>-0.481847</td>\n","      <td>0.864955</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>salvajes</td>\n","      <td>1.461735</td>\n","      <td>-0.152744</td>\n","      <td>-1.527798</td>\n","      <td>0.763416</td>\n","      <td>0.238266</td>\n","      <td>0.131297</td>\n","      <td>1.219684</td>\n","      <td>0.927227</td>\n","      <td>0.357067</td>\n","      <td>...</td>\n","      <td>0.668215</td>\n","      <td>0.212547</td>\n","      <td>-0.268987</td>\n","      <td>-0.034083</td>\n","      <td>0.464593</td>\n","      <td>0.627136</td>\n","      <td>-0.037913</td>\n","      <td>0.340449</td>\n","      <td>0.716927</td>\n","      <td>0.149377</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 301 columns</p>\n","</div>"],"text/plain":["           0          1          2          3          4          5    \\\n","0  espectáculo  -0.018124   0.662344  -0.496641   1.093626   1.203544   \n","1         copa    0.76913  -0.136863   0.574292   0.914988  -0.424388   \n","2      muertos   0.007998  -1.505609  -0.040155  -2.287344  -0.745638   \n","3    necesaria   0.445097  -0.354437   0.687452  -0.504538  -1.704996   \n","4     salvajes   1.461735  -0.152744  -1.527798   0.763416   0.238266   \n","\n","         6          7          8          9      ...            291  \\\n","0   0.579767  -0.709709  -1.673271  -0.357038    ...       0.987171   \n","1   1.480464   0.584982  -1.155805  -0.232642    ...       -1.56464   \n","2  -2.518183  -0.216369  -0.069186   0.810915    ...        1.60178   \n","3  -1.646449  -0.051403  -0.365338  -0.043992    ...      -0.264119   \n","4   0.131297   1.219684   0.927227   0.357067    ...       0.668215   \n","\n","         292        293        294        295        296        297  \\\n","0  -0.519311  -0.455485  -3.071517   0.301956  -0.284423  -0.421788   \n","1   0.147232   0.494064  -0.050192   1.089621   0.132484   0.425075   \n","2   1.236585  -1.610454   0.449868   1.119087  -0.058529   1.179235   \n","3   0.309252   0.850894  -0.203283  -0.503264  -0.480426  -1.598555   \n","4   0.212547  -0.268987  -0.034083   0.464593   0.627136  -0.037913   \n","\n","         298        299        300  \n","0  -0.582947  -0.232837  -0.242942  \n","1  -0.163198  -1.102661   0.108071  \n","2   2.780768   0.045362  -0.476397  \n","3   0.835111  -0.481847   0.864955  \n","4   0.340449   0.716927   0.149377  \n","\n","[5 rows x 301 columns]"]},"metadata":{"tags":[]},"execution_count":12}]},{"metadata":{"id":"x6eW_Da4drqe","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":34},"outputId":"476a6777-35a3-455c-baec-5b1e9f4d37fe","executionInfo":{"status":"ok","timestamp":1521338047750,"user_tz":360,"elapsed":306,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["source_df.shape,target_df.shape"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((5000, 301), (5000, 301))"]},"metadata":{"tags":[]},"execution_count":17}]},{"metadata":{"id":"WBwadECaSReh","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["# obtener listas de semillas de español y náhuatl de entrenamiento\n","semillas_esp = list(train_set[\"esp\"].values)\n","semillas_nah = list(train_set[\"nah\"].values)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"BOuEDFXKSUIL","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":34},"outputId":"e2ff413a-aca3-4561-b4ee-4b62f4e7e939","executionInfo":{"status":"ok","timestamp":1519349206882,"user_tz":360,"elapsed":1325,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["# Obtener los índices que tienen las semillas de entrenamiento\n","# dentro del dataframe de vectores\n","index_esp = [int(es_df[es_df[0] == palabra].index[0])\n","             for palabra in semillas_esp]\n","index_nah = [int(na_df[na_df[0] == palabra].index[0])\n","             for palabra in semillas_nah]\n","\n","print(len(index_esp), len(index_nah))"],"execution_count":234,"outputs":[{"output_type":"stream","text":["471 471\n"],"name":"stdout"}]},{"metadata":{"id":"NlZLVh-cOoEL","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["# obtener listas de semillas de español y náhuatl de evaluación\n","#semillas_esp_test = list(set(test_set[\"esp\"].values))\n","#semillas_nah_test = list(set(test_set[\"nah\"].values))"],"execution_count":0,"outputs":[]},{"metadata":{"id":"e0B65i6zSYO6","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["def get_vectors(dataframe, index, format=np.float64):\n","    \"\"\"\n","    Retorna los vectores dentro del dataframe.\n","    \n","    Args:\n","        dataframe (Pandas.dataframe): Contiene las palabras y su representación vectorial.\n","        index (list): Contiene los índices que se necesitan del dataframe.\n","        format (numpy format): Tipo flotante. Default float64.\n","    \n","    Returns:\n","        Numpy array: Matriz con representaciones vectoriales.\n","    \"\"\"\n","    \n","    return np.asarray([dataframe.iloc[_].loc[1::].values for _ in index]).astype(format)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"YgY88xp5SadE","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":34},"outputId":"e96249bc-8606-4ee0-dee3-8209a1c31d49","executionInfo":{"status":"ok","timestamp":1519349212634,"user_tz":360,"elapsed":583,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["# Obtener representaciones vectoriales de las semillas.\n","es_vectores = get_vectors(es_df, index_esp)\n","na_vectores = get_vectors(na_df, index_nah)\n","len(es_vectores)"],"execution_count":236,"outputs":[{"output_type":"execute_result","data":{"text/plain":["471"]},"metadata":{"tags":[]},"execution_count":236}]},{"metadata":{"id":"N8qdd9hwfHws","colab_type":"text"},"cell_type":"markdown","source":["# Los dataframes solo contienen los vectores de entrenamiento, ya no es necesario buscarlo por índices"]},{"metadata":{"id":"My_nJw1keSOM","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["target_dummy = target_df.drop(target_df.columns[0], axis=1)\n","target_vectores = target_dummy.values.astype(np.float64)\n","source_dummy = source_df.drop(source_df.columns[0], axis=1)\n","source_vectores = source_dummy.values.astype(np.float64)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"HCXks5GlxgX0","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["ttarget_dummy = ttarget_df.drop(ttarget_df.columns[0], axis=1)\n","ttarget_vectores = ttarget_dummy.values.astype(np.float64)\n","es_dummy = tsource_df.drop(tsource_df.columns[0], axis=1)\n","tsource_vectores = es_dummy.values.astype(np.float64)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"BRS2cgml8I4e","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":34},"outputId":"9702fbe4-f5ee-465d-b476-b53b56fca713","executionInfo":{"status":"ok","timestamp":1520634540288,"user_tz":360,"elapsed":331,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["'''es_vectores=es_df.as_matrix()\n","na_vectores=es_df.as_matrix()'''"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'es_vectores=es_df.as_matrix()\\nna_vectores=es_df.as_matrix()'"]},"metadata":{"tags":[]},"execution_count":16}]},{"metadata":{"id":"WqIBSckpSMCk","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":34},"outputId":"9050e91b-f9e9-4a20-fba5-47472d031f4c","executionInfo":{"status":"ok","timestamp":1521338063565,"user_tz":360,"elapsed":389,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["source_vectores.shape,target_vectores.shape"],"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((5000, 300), (5000, 300))"]},"metadata":{"tags":[]},"execution_count":21}]},{"metadata":{"id":"fcP5yz6123WU","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":34},"outputId":"80556b7e-3bf1-45a6-df2b-911a990545ae","executionInfo":{"status":"ok","timestamp":1521338065714,"user_tz":360,"elapsed":301,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["tsource_vectores.shape,ttarget_vectores.shape"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((1869, 300), (1869, 300))"]},"metadata":{"tags":[]},"execution_count":22}]},{"metadata":{"id":"wbK4fgMd_CiK","colab_type":"text"},"cell_type":"markdown","source":["# Duplicar datos de entrenamiento"]},{"metadata":{"id":"Ao1R8IH5urH2","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["#index_dummy=[np.random.randint(24) for _ in range(150)]\n","es_dummy = es_vectores\n","na_dummy = na_vectores\n","for i in range(es_dummy.shape[0]):\n","    es_vectores=np.vstack((es_vectores,es_dummy[i][::-1]))\n","    na_vectores=np.vstack((na_vectores,na_dummy[i][::-1]))"],"execution_count":0,"outputs":[]},{"metadata":{"id":"_For8NvhCfMe","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["def mean_center_embeddingwise(matrix):\n","    xp = (matrix)\n","    avg = np.mean(matrix, axis=0)\n","    return matrix - avg"],"execution_count":0,"outputs":[]},{"metadata":{"id":"8zXoYw9pWYCv","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["es_vectores=mean_center_embeddingwise(es_vectores)\n","na_vectores=mean_center_embeddingwise(na_vectores)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"GCxdYm1CDJQf","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":34},"outputId":"e77b688d-6887-441e-ab8f-1279c380f3d8","executionInfo":{"status":"ok","timestamp":1519799341547,"user_tz":360,"elapsed":642,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["np.min(es_vectores)"],"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-1.7076590887096774"]},"metadata":{"tags":[]},"execution_count":40}]},{"metadata":{"id":"TnO73eORyrU8","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":129},"outputId":"e45e6e77-c2cd-45db-ca19-8cf352969d5e","executionInfo":{"status":"ok","timestamp":1518752305170,"user_tz":360,"elapsed":316,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["es_df[es_df[0]==\"cebolla\"]"],"execution_count":137,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>119</th>\n","      <th>120</th>\n","      <th>121</th>\n","      <th>122</th>\n","      <th>123</th>\n","      <th>124</th>\n","      <th>125</th>\n","      <th>126</th>\n","      <th>127</th>\n","      <th>128</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>734</th>\n","      <td>cebolla</td>\n","      <td>0.167541</td>\n","      <td>0.19661100000000001</td>\n","      <td>-0.97720899999999999</td>\n","      <td>0.58840000000000003</td>\n","      <td>-0.88506399999999996</td>\n","      <td>-0.151472</td>\n","      <td>-0.300342</td>\n","      <td>-0.061525000000000003</td>\n","      <td>0.42176799999999998</td>\n","      <td>...</td>\n","      <td>-0.73907299999999998</td>\n","      <td>-0.25171300000000002</td>\n","      <td>0.70741200000000004</td>\n","      <td>0.25678099999999998</td>\n","      <td>-0.103711</td>\n","      <td>-0.047140000000000001</td>\n","      <td>-0.116604</td>\n","      <td>-0.20202400000000001</td>\n","      <td>-0.037447000000000001</td>\n","      <td>-0.97604599999999997</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1 rows × 129 columns</p>\n","</div>"],"text/plain":["         0         1                    2                     3    \\\n","734  cebolla  0.167541  0.19661100000000001  -0.97720899999999999   \n","\n","                     4                     5          6          7    \\\n","734  0.58840000000000003  -0.88506399999999996  -0.151472  -0.300342   \n","\n","                       8                    9            ...           \\\n","734  -0.061525000000000003  0.42176799999999998          ...            \n","\n","                      119                   120                  121  \\\n","734  -0.73907299999999998  -0.25171300000000002  0.70741200000000004   \n","\n","                     122        123                    124        125  \\\n","734  0.25678099999999998  -0.103711  -0.047140000000000001  -0.116604   \n","\n","                      126                    127                   128  \n","734  -0.20202400000000001  -0.037447000000000001  -0.97604599999999997  \n","\n","[1 rows x 129 columns]"]},"metadata":{"tags":[]},"execution_count":137}]},{"metadata":{"id":"PdyxM-7N5bu8","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["es_vect = es_vectores\n","na_vect = na_vectores"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Nu0-46UVs0l1","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["def next_batch(x,y, step, batch_size):\n","    \"\"\"Función para obtener batches de un conjunto de datos\n","    \n","    Arguments:\n","        x {numpyarray} -- Conjunto de datos (inputs).\n","        y {numpyarray} -- Conjunto de datos (targets).\n","        step {int} -- Batches.\n","        batch_size {int} -- Tamaño del batch.\n","    \n","    Returns:\n","        numpyarray -- Subconjunto de tamaño batch_size.\n","    \"\"\"\n","\n","    return x[batch_size * step:batch_size * step + batch_size],y[batch_size * step:batch_size * step + batch_size]"],"execution_count":0,"outputs":[]},{"metadata":{"id":"zhft17JIgebJ","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["%%time\n","rbm = BernoulliRBM(n_components=500, learning_rate=.0001, random_state=0, verbose=True,n_iter=15)\n","rbm.fit(es_vectores)\n","W1_ = rbm.components_.T\n","rbm = BernoulliRBM(n_components=250, learning_rate=.0001, random_state=0, verbose=True,n_iter=15)\n","rbm.fit(W1_)\n","W2_= rbm.components_.T\n","rbm = BernoulliRBM(n_components=100, learning_rate=.0001, random_state=0, verbose=True,n_iter=15)\n","rbm.fit(W2_)\n","W3_ = rbm.components_.T"],"execution_count":0,"outputs":[]},{"metadata":{"id":"6jgl1O7XxBc7","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":34},"outputId":"db771191-8d97-465f-a54e-1be477b56af4","executionInfo":{"status":"ok","timestamp":1520384333520,"user_tz":360,"elapsed":972,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["es_vectores.shape"],"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5000, 300)"]},"metadata":{"tags":[]},"execution_count":31}]},{"metadata":{"id":"DP4GsSnpNr9s","colab_type":"text"},"cell_type":"markdown","source":["https://ikhlestov.github.io/posts/rbm-based-autoencoders-with-tensorflow/\n","https://gist.github.com/blackecho/db85fab069bd2d6fb3e7"]},{"metadata":{"id":"cvOvkhPxSeA1","colab_type":"text"},"cell_type":"markdown","source":["# Entrenamiento"]},{"metadata":{"id":"xnDpufmaSlAw","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":50},{"item_id":65}],"base_uri":"https://localhost:8080/","height":1513},"outputId":"f65a67c2-50b8-483b-b93f-bcda00c30c05","executionInfo":{"status":"ok","timestamp":1521346695706,"user_tz":360,"elapsed":341899,"user":{"displayName":"José Luis Olivares Castillo","photoUrl":"//lh3.googleusercontent.com/-TwmKeyobW8Q/AAAAAAAAAAI/AAAAAAAABMI/wWTS79noj8g/s50-c-k-no/photo.jpg","userId":"111813722129821074214"}}},"cell_type":"code","source":["%%time\n","tf.reset_default_graph()\n","tf.set_random_seed(42)\n","print(\"TensorFlow v{}\".format(tf.__version__))\n","print(tf.test.gpu_device_name())\n","\n","LEARNING_RATE = 1\n","EPOCHS = 4050\n","# Dimensión de vectores de entrada (número de neuronas en capa de entrada).\n","NODES_INPUT = source_vectores.shape[1]\n","\n","# Número de neuronas en capas ocultas.\n","NODES_H1 = 360   #70 - 20 - 15\n","NODES_H2 = 360  # 42 - 20\n","NODES_H3 = 360  # 42 - 20\n","NODES_H4 = 110  # 42 - 20\n","NODES_H5 = 950\n","\n","# Dimensión de vectores de salida (número de neuronas en capa de salida).\n","NODES_OUTPUT = target_vectores.shape[1]\n","\n","\n","\n","#XAVIER_INIT = True\n","INIT = {\"HE\":tf.keras.initializers.he_uniform(seed=42),\n","        \"XAVIER\":tf.contrib.layers.xavier_initializer(dtype=tf.float64,seed=42),\n","        \"TANH\":tf.truncated_normal_initializer(stddev=0.1,seed=42),\n","        \"w1\":tf.truncated_normal_initializer(stddev=0.07688522844907134,mean=0.00019678121094947982,seed=42),\n","        \"w2\":tf.truncated_normal_initializer(stddev=0.08457032845641706,mean=0.00036622167006112975,seed=42)\n","       }\n","\n","DROP = 1\n","\n","model = \"model2250\"\n","\n","\n","with tf.name_scope('input'):\n","    # El valor None indica que se puede modificar la dimensión de los tensores\n","    # por si se usan todos los vectores o batches.\n","    X = tf.placeholder(shape=[None, NODES_INPUT],dtype=tf.float64, name='input_es')\n","    y = tf.placeholder(shape=[None, NODES_OUTPUT],dtype=tf.float64, name='target_na')\n","\n","\n","kprob = tf.placeholder(tf.float64,name='dropout_prob')\n","\n","\n","def activation_function(layer, act, name, alpha=tf.constant(0.001, dtype=tf.float64)):\n","    if act.__eq__(\"leaky_relu\"):\n","        return tf.nn.leaky_relu(layer, alpha, name=name)\n","    elif act.__eq__(\"softmax\"):\n","        return tf.nn.softmax(layer, name=name)\n","    elif act.__eq__(\"sigmoid\"):\n","        return tf.nn.sigmoid(layer, name=name)\n","    elif act.__eq__(\"tanh\"):\n","        return tf.nn.tanh(layer, name=name)\n","    elif act.__eq__(\"elu\"):\n","        return tf.nn.elu(layer,name=name)\n","    elif act.__eq__(\"selu\"):\n","        return tf.nn.selu(layer,name=name)\n","    return tf.nn.relu(layer, name=name)\n","\n","\n","# Se definen las capas.\n","\n","\n","'''\n","fc1 = tf.layers.dense(X,NODES_H1,activation=tf.nn.sigmoid,\n","                      kernel_regularizer=tf.contrib.layers.l2_regularizer(scale=0.1),\n","                      kernel_initializer=tf.contrib.layers.xavier_initializer(dtype=tf.float64))\n","'''\n","\n","w1 = tf.get_variable(name=\"W1\", dtype=tf.float64,\n","                                shape=[NODES_INPUT, NODES_H1],\n","                                initializer=tf.truncated_normal_initializer(stddev=0.1,seed=41),\n","                                #initializer=W1_,\n","                                use_resource=True,\n","                                regularizer = tf.contrib.layers.l2_regularizer(scale=0.1)\n","                    )\n","b1 = tf.Variable(tf.zeros(shape=[NODES_H1], dtype=tf.float64), name=\"b1\")\n","fc1 = activation_function(tf.nn.xw_plus_b(X,w1,b1), \"elu\", \"fc1\")\n","fc1 = tf.nn.dropout(fc1,kprob,seed=42)\n","\n","\n","w2 = tf.get_variable(name=\"W2\", dtype=tf.float64,\n","                                shape=[NODES_H1, NODES_H2],\n","                                initializer=tf.truncated_normal_initializer(stddev=0.1,seed=42),\n","                                #initializer=W3_,\n","                                use_resource=True,\n","                                regularizer = tf.contrib.layers.l2_regularizer(scale=0.1)\n","                    )\n","b2 = tf.Variable(tf.zeros(shape=[NODES_H2], dtype=tf.float64), name=\"b2\")\n","fc2 = activation_function(tf.nn.xw_plus_b(fc1,w2,b2), \"tanh\", \"fc2\")\n","\n","w3 = tf.get_variable(name=\"W3\", dtype=tf.float64,\n","                                shape=[NODES_H2, NODES_H3],\n","                                initializer=tf.truncated_normal_initializer(stddev=0.1,seed=43),\n","                                #initializer=W3_,\n","                                use_resource=True,\n","                                regularizer = tf.contrib.layers.l2_regularizer(scale=0.1)\n","                    )\n","\n","b3 = tf.Variable(tf.zeros(shape=[NODES_H3], dtype=tf.float64), name=\"b3\")\n","fc3 = activation_function(tf.nn.xw_plus_b(fc2,w3,b3), \"tanh\", \"fc3\")\n","\n","w4 = tf.get_variable(name=\"W4\", dtype=tf.float64,\n","                                shape=[NODES_H3, NODES_OUTPUT],\n","                                initializer=tf.truncated_normal_initializer(stddev=0.1,seed=44),\n","                                #initializer=W3_,\n","                                use_resource=True,\n","                                regularizer = tf.contrib.layers.l2_regularizer(scale=0.1)\n","                    )\n","b4 = tf.Variable(tf.zeros(shape=[NODES_OUTPUT], dtype=tf.float64), name=\"b4\")\n","nah_predicted = activation_function(tf.nn.xw_plus_b(fc3,w4,b4),\"tanh\",\"nah_predicted\")\n","\n","\n","####\n","'''\n","w3 = tf.get_variable(name=\"W3\", dtype=tf.float64,\n","                                shape=[NODES_H2, NODES_H3],\n","                                initializer=tf.truncated_normal_initializer(stddev=0.1,seed=43),\n","                                #initializer=W3_,\n","                                use_resource=True,\n","                                regularizer = tf.contrib.layers.l2_regularizer(scale=0.1)\n","                    )\n","b3 = tf.Variable(tf.zeros(shape=[NODES_H3], dtype=tf.float64), name=\"b3\")\n","fc3 = activation_function(tf.nn.xw_plus_b(fc2,w3,b3), \"tanh\", \"fc3\")\n","\n","\n","w4 = tf.get_variable(name=\"W4\", dtype=tf.float64,\n","                                shape=[NODES_H3, NODES_H4],\n","                                initializer=tf.truncated_normal_initializer(stddev=0.1,seed=43),\n","                                #initializer=W3_,\n","                                use_resource=True,\n","                                regularizer = tf.contrib.layers.l2_regularizer(scale=0.1)\n","                    )\n","b4 = tf.Variable(tf.zeros(shape=[NODES_H4], dtype=tf.float64), name=\"b4\")\n","fc4 = tf.nn.xw_plus_b(fc3,w4,b4)\n","fc4 = activation_function(tf.nn.xw_plus_b(fc3,w4,b4), \"tanh\", \"fc4\")\n","\n","# DECODER\n","w5 = tf.transpose(w4)\n","b5 = tf.Variable(tf.zeros(shape=[NODES_H3],dtype=tf.float64),name=\"b5\")\n","fc5 = activation_function(tf.nn.xw_plus_b(fc4,w5,b5),\"tanh\",\"fc5\")\n","\n","w6 = tf.transpose(w3)\n","b6 = tf.Variable(tf.zeros(shape=[NODES_H2],dtype=tf.float64),name=\"b6\")\n","fc6 = activation_function(tf.nn.xw_plus_b(fc5,w6,b6),\"tanh\",\"fc5\")\n","\n","w7 = tf.transpose(w2)\n","b7 = tf.Variable(tf.zeros(shape=[NODES_H1],dtype=tf.float64),name=\"b7\")\n","fc7= activation_function(tf.nn.xw_plus_b(fc6,w7,b7),\"tanh\",\"fc7\")\n","\n","\n","w8 = tf.transpose(w1)\n","b8 = tf.Variable(tf.zeros(shape=[NODES_OUTPUT],dtype=tf.float64),name=\"b8\")\n","nah_predicted = activation_function(tf.nn.xw_plus_b(fc7,w8,b8),\"tanh\",\"nah_predicted\")'''\n","\n","\n","\n","\n","'''W_na = tf.get_variable(name=\"W_na\",shape=[NODES_H2,NODES_OUTPUT],dtype=tf.float64,\n","                                initializer=INIT[\"w2\"],\n","                                use_resource=True,\n","                                regularizer=tf.contrib.layers.l2_regularizer(scale=0.1)\n","                                )\n","b_na = tf.Variable(tf.zeros(shape=[NODES_OUTPUT],dtype=tf.float64),name=\"b_na\")\n","#nah_predicted=tf.nn.xw_plus_b(fc1,W_na,b_na)\n","nah_predicted = activation_function(tf.nn.xw_plus_b(fc1,W_na,b_na),\"sigmoid\",\"nah_predicted\")'''\n","\n","\n","\n","'''reg_losses = tf.get_collection(tf.GraphKeys.REGULARIZATION_LOSSES)\n","reg_constant = 0.01  # Choose an appropriate one'''\n","\n","#loss = tf.reduce_mean(tf.losses.mean_squared_error(nah_predicted,y), name=\"loss\")\n","loss = tf.reduce_mean(tf.squared_difference(nah_predicted, y), name=\"loss\")\n","\n","#regularizer = tf.nn.l2_loss(W1) + tf.nn.l2_loss(W_na)\n","\n","#loss = loss + sum(reg_losses)\n","#loss = tf.reduce_mean(loss+0.01*regularizer)\n","tf.summary.scalar(\"loss\", loss)\n","\n","\n","#optimiser = tf.train.MomentumOptimizer(learning_rate=LEARNING_RATE, momentum=0.7)\n","optimiser = tf.train.AdagradOptimizer(learning_rate=LEARNING_RATE)\n","#train_op = tf.train.AdagradOptimizer(learning_rate=LEARNING_RATE).minimize(loss)\n","\n","\n","# Compute gradients\n","gradients, variables = zip(*optimiser.compute_gradients(loss))\n","\n","gradients, _ = tf.clip_by_global_norm(gradients, 5.0)\n","\n","# Apply processed gradients to optimizer.\n","train_op = optimiser.apply_gradients(zip(gradients, variables))\n","\n","\n","# Accuracy \n","with tf.name_scope('accuracy'):\n","    with tf.name_scope('correct_prediction'):\n","        # Se compara salida de la red neuronal con el vector objetivo.\n","        correct_prediction = tf.equal(tf.argmax(nah_predicted, 1), tf.argmax(y, 1))\n","    with tf.name_scope('accuracy'):\n","        # Se calcula la precisión.\n","        accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float64))\n","    tf.summary.scalar('accuracy', accuracy)\n","\n","\n","LOGPATH = \"logs/model\"\n","print(\"logpath:\", LOGPATH)\n","\n","\n","# Se crea la sesión\n","config = tf.ConfigProto(log_device_placement=True)\n","sess =  tf.Session(config=config)\n","\n","# Se ponen los histogramas y valores de las gráficas en una sola variable.\n","summaryMerged = tf.summary.merge_all()\n","\n","# Escribir a disco el grafo generado y las gráficas para visualizar en TensorBoard.\n","writer = tf.summary.FileWriter(LOGPATH, sess.graph)\n","\n","# Se inicializan los valores de los tensores.\n","init = tf.global_variables_initializer()\n","\n","# Add ops to save and restore all the variables.\n","saver = tf.train.Saver()\n","\n","# Ejecutando sesión\n","sess.run(init)\n","\n","\n","for j in range(EPOCHS):\n","    \n","    for i in range(0,20):\n","      source_batch, target_batch = next_batch(source_vectores,target_vectores, i, 250)\n","      _loss, _, sumOut = sess.run([loss, train_op, summaryMerged],\n","                                feed_dict={X: source_batch, y: target_batch,kprob:DROP})\n","      \n","    #t_loss, _, sumOut = sess.run([loss, train_op, summaryMerged],feed_dict={X: tsource_vectores, y: ttarget_vectores,kprob:1})\n","      \n","\n","    \n","    writer.add_summary(sumOut, j)\n","    \n","    if (j % 50) == 0:\n","      #train_accuracy = accuracy.eval(session=sess, feed_dict={X: tsource_vectores, y: ttarget_vectores,kprob:1})\n","      print(\"Epoch:\", j, \"/\", EPOCHS, \"\\tLoss:\",_loss)#,\"\\ttLoss\",t_loss, \"\\tAccuracy:\", train_accuracy)\n","        \n","        \n","        \n","\n","SAVE_PATH = \"./\"+model+\".ckpt\"\n","print(\"save path\",SAVE_PATH)\n","save_model = saver.save(sess, SAVE_PATH)\n","print(\"Model saved in file: %s\", SAVE_PATH)\n","writer.close()"],"execution_count":15,"outputs":[{"output_type":"stream","text":["TensorFlow v1.6.0\n","/device:GPU:0\n","logpath: logs/model\n","Epoch: 0 / 4050 \tLoss: 0.881149275007139\n","Epoch: 50 / 4050 \tLoss: 0.5330348515372121\n","Epoch: 100 / 4050 \tLoss: 0.49382795372775656\n","Epoch: 150 / 4050 \tLoss: 0.4618377141681403\n","Epoch: 200 / 4050 \tLoss: 0.43670332939030115\n","Epoch: 250 / 4050 \tLoss: 0.41789839796496464\n","Epoch: 300 / 4050 \tLoss: 0.4048684785267178\n","Epoch: 350 / 4050 \tLoss: 0.39457158330048475\n","Epoch: 400 / 4050 \tLoss: 0.3863546474993012\n","Epoch: 450 / 4050 \tLoss: 0.3799844275195527\n","Epoch: 500 / 4050 \tLoss: 0.3741635886607902\n","Epoch: 550 / 4050 \tLoss: 0.36936799309463814\n","Epoch: 600 / 4050 \tLoss: 0.3653031899461011\n","Epoch: 650 / 4050 \tLoss: 0.36166457323416695\n","Epoch: 700 / 4050 \tLoss: 0.35865706836944056\n","Epoch: 750 / 4050 \tLoss: 0.355706605012883\n","Epoch: 800 / 4050 \tLoss: 0.3536165996096264\n","Epoch: 850 / 4050 \tLoss: 0.35104889459644883\n","Epoch: 900 / 4050 \tLoss: 0.3495138942735912\n","Epoch: 950 / 4050 \tLoss: 0.34723001296112627\n","Epoch: 1000 / 4050 \tLoss: 0.3456540835055752\n","Epoch: 1050 / 4050 \tLoss: 0.3440745630872971\n","Epoch: 1100 / 4050 \tLoss: 0.3426085461106621\n","Epoch: 1150 / 4050 \tLoss: 0.34128969706457535\n","Epoch: 1200 / 4050 \tLoss: 0.340066130480298\n","Epoch: 1250 / 4050 \tLoss: 0.3386571881768773\n","Epoch: 1300 / 4050 \tLoss: 0.33790573825789566\n","Epoch: 1350 / 4050 \tLoss: 0.3365310431255182\n","Epoch: 1400 / 4050 \tLoss: 0.3358703634828037\n","Epoch: 1450 / 4050 \tLoss: 0.33487716767586717\n","Epoch: 1500 / 4050 \tLoss: 0.333946297473923\n","Epoch: 1550 / 4050 \tLoss: 0.3333075365610641\n","Epoch: 1600 / 4050 \tLoss: 0.3324578713215463\n","Epoch: 1650 / 4050 \tLoss: 0.3315770085397446\n","Epoch: 1700 / 4050 \tLoss: 0.33080745362770025\n","Epoch: 1750 / 4050 \tLoss: 0.33019151218679366\n","Epoch: 1800 / 4050 \tLoss: 0.3295664076206798\n","Epoch: 1850 / 4050 \tLoss: 0.32889103190548435\n","Epoch: 1900 / 4050 \tLoss: 0.32827344112790274\n","Epoch: 1950 / 4050 \tLoss: 0.32745731285111057\n","Epoch: 2000 / 4050 \tLoss: 0.32681966322954636\n","Epoch: 2050 / 4050 \tLoss: 0.3261992056554452\n","Epoch: 2100 / 4050 \tLoss: 0.3262138246493173\n","Epoch: 2150 / 4050 \tLoss: 0.32537766051696004\n","Epoch: 2200 / 4050 \tLoss: 0.3251282050971027\n","Epoch: 2250 / 4050 \tLoss: 0.3250094255955096\n","Epoch: 2300 / 4050 \tLoss: 0.3245844047443695\n","Epoch: 2350 / 4050 \tLoss: 0.3246751555883456\n","Epoch: 2400 / 4050 \tLoss: 0.32442804896954136\n","Epoch: 2450 / 4050 \tLoss: 0.3240268558355839\n","Epoch: 2500 / 4050 \tLoss: 0.323775572427867\n","Epoch: 2550 / 4050 \tLoss: 0.32389926379614065\n","Epoch: 2600 / 4050 \tLoss: 0.3235847753197204\n","Epoch: 2650 / 4050 \tLoss: 0.32351965114849185\n","Epoch: 2700 / 4050 \tLoss: 0.3232359729759571\n","Epoch: 2750 / 4050 \tLoss: 0.3232902494739749\n","Epoch: 2800 / 4050 \tLoss: 0.3231219480226605\n","Epoch: 2850 / 4050 \tLoss: 0.3226299042409453\n","Epoch: 2900 / 4050 \tLoss: 0.32230651809304656\n","Epoch: 2950 / 4050 \tLoss: 0.32205975153995475\n","Epoch: 3000 / 4050 \tLoss: 0.3220512195445656\n","Epoch: 3050 / 4050 \tLoss: 0.32201101665082527\n","Epoch: 3100 / 4050 \tLoss: 0.3221759138957911\n","Epoch: 3150 / 4050 \tLoss: 0.3215817683041858\n","Epoch: 3200 / 4050 \tLoss: 0.32140867531326134\n"],"name":"stdout"},{"output_type":"stream","text":["Epoch: 3250 / 4050 \tLoss: 0.3213194051358738\n","Epoch: 3300 / 4050 \tLoss: 0.3212891140317017\n","Epoch: 3350 / 4050 \tLoss: 0.3208830773902327\n","Epoch: 3400 / 4050 \tLoss: 0.3206599287267058\n","Epoch: 3450 / 4050 \tLoss: 0.3206118979572213\n","Epoch: 3500 / 4050 \tLoss: 0.32013331879072676\n","Epoch: 3550 / 4050 \tLoss: 0.31995926593726765\n","Epoch: 3600 / 4050 \tLoss: 0.3195397074731296\n","Epoch: 3650 / 4050 \tLoss: 0.31936602602397046\n","Epoch: 3700 / 4050 \tLoss: 0.31900953637418966\n","Epoch: 3750 / 4050 \tLoss: 0.31884331211274936\n","Epoch: 3800 / 4050 \tLoss: 0.318953943300246\n","Epoch: 3850 / 4050 \tLoss: 0.3191227443333483\n","Epoch: 3900 / 4050 \tLoss: 0.318781480265031\n","Epoch: 3950 / 4050 \tLoss: 0.31855555182646844\n","Epoch: 4000 / 4050 \tLoss: 0.3183221471681792\n","save path ./model2250.ckpt\n","Model saved in file: %s ./model2250.ckpt\n","CPU times: user 5min 32s, sys: 1min 13s, total: 6min 46s\n","Wall time: 5min 39s\n"],"name":"stdout"}]},{"metadata":{"id":"lQzo32LcSrap","colab_type":"text"},"cell_type":"markdown","source":["# Descargar modelo generado"]},{"metadata":{"id":"aljwsHu_Sy5H","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["files.download(\"/content/checkpoint\")"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Z-NFAordS3bX","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["files.download(\"/content/\"+model+\".ckpt.meta\")"],"execution_count":0,"outputs":[]},{"metadata":{"id":"3BYVQSevS2Mz","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["files.download(\"/content/\"+model+\".ckpt.index\")"],"execution_count":0,"outputs":[]},{"metadata":{"id":"p6eFKjMjS1PE","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["files.download(\"/content/\"+model+\".ckpt.data-00000-of-00001\")"],"execution_count":0,"outputs":[]},{"metadata":{"id":"3rcNwAEftSoJ","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}},"cellView":"code"},"cell_type":"code","source":["! rm -rf logs/model"],"execution_count":0,"outputs":[]},{"metadata":{"id":"YQUNJjsailZ4","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]}]}